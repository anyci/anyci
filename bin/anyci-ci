#!/usr/bin/env bash
set -eo pipefail
readonly ANYCI_ROOT="$( cd "$(dirname "$0")/.." ; pwd -P)"
readonly __ENTRY=$(basename "$0")

# shellcheck source=../lib/log-helpers.sh
. "$ANYCI_ROOT/lib/log-helpers.sh"

# shellcheck source=../lib/anyci-helpers.sh
. "$ANYCI_ROOT/lib/anyci-helpers.sh"

ANYCI_FAMILY="${ANYCI_FAMILY:-}"
ANYCI_GROUP="${ANYCI_GROUP:-default}"

[ -n "$PROJECT_ROOT" ] || die "PROJECT_ROOT cannot be empty"
lib/require/dir "$PROJECT_ROOT" "$ANYCI_ROOT/family/$ANYCI_FAMILY" "$ANYCI_ROOT/group/$ANYCI_GROUP"
lib/set/search_paths "${ANYCI_PROJECT_PATHS:-ci:pipeline}"

# if no steps are provided, e.g. 'bin/ci' versus 'bin/ci foo', these will execute
ANYCI_DEFAULT_STEPS=(
  check
  build
  test
)

case "$1" in
  -h|--help|help)
    lib/help ;;
  -v|--version|version)
    lib/version ;;
  exec)
    shift && lib/exec "$@"
    exit $?
    ;;
  *)
    [ $# -eq 0 ] && set -- "${ANYCI_DEFAULT_STEPS[@]}"
    ;;
esac

# step execution
log "step(s) to execute:" "$@"
for step in "$@"; do
  step_file=$(lib/lookup "$step") || die "failed to find '$step' step"
  [ -x "$step_file" ] || die "$step_file must be executable!"

  log "executing step: $step"
  export ANYCI_STEP_NAME="$step"
  lib/exec "$step_file"
done
